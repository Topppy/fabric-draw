{"version":3,"sources":["Toolbox.js","App.js","serviceWorker.js","index.js"],"names":["canvas","window","fabric","Object","prototype","transparentCorners","strokeUniform","padding","MAX_ZOOM","keyMap","deleteNode","D","V","Add","Subtract","COLORS","reduce","obj","curKey","addBg","url","a","Promise","resolve","setBackgroundImage","renderAll","bind","addRect","color","x","y","rect","Rect","left","top","fill","stroke","strokeWidth","width","height","add","Toolbox","props","setType","type","isDrawingMode","setState","setData","data","state","history","push","jsonData","setPenSize","size","freeDrawingBrush","penSize","initCanvas","Canvas","centeredScaling","hoverCursor","JSON","stringify","on","opt","drawingShape","discardActiveObject","hasSelected","e","penColor","values","pointer","map","val","getZoom","get","set","requestRenderAll","setActiveObject","setZoom","handlers","getActiveObjects","forEach","remove","moveUp","event","console","log","this","Math","min","max","black","zoom","pp","ps","PencilBrush","className","onClick","disabled","deleteNodes","getObjects","length","pop","cur","loadFromJSON","value","onChange","parseInt","target","keys","clr","style","background","key","href","URL","createObjectURL","Blob","download","Component","React","memo","id","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18657e14.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { fabric } from \"fabric\";\nimport { GlobalHotKeys } from \"react-hotkeys\";\nimport \"./Toolbox.css\";\n\nlet canvas = null;\nwindow.fabric = fabric; // todo\nfabric.Object.prototype.transparentCorners = false;\nfabric.Object.prototype.strokeUniform = true;\nfabric.Object.prototype.padding = 10;\nconst MAX_ZOOM = 10;\n\nconst keyMap = {\n  deleteNode: [\"del\", \"backspace\"],\n  D: \"d\",\n  V: \"v\",\n  Add: \"=\",\n  Subtract: \"-\"\n};\n\nconst COLORS_KEY = [\n  \"blue\",\n  \"green\",\n  \"yellow\",\n  \"orange\",\n  \"red\",\n  \"black\",\n  \"white\"\n];\n\nconst COLORS = COLORS_KEY.reduce((obj, curKey) => {\n  obj[curKey] = curKey;\n  return obj;\n}, {});\n\n// image\nconst addImage = url => {\n  return new Promise(resolve => {\n    fabric.Image.fromURL(url, oImg => {\n      resolve(oImg);\n    });\n  });\n};\n\nconst addBg = async url => {\n  return new Promise(resolve => {\n    canvas.setBackgroundImage(\n      \"http://www.gaozhongxue.com/uploads/allimg/190430/7-1Z430140324H7.jpg\",\n      () => {\n        canvas.renderAll.bind(canvas)();\n        resolve();\n      }\n    );\n  });\n};\n\n// shape rect\nconst addRect = ({ color, x, y }) => {\n  var rect = new fabric.Rect({\n    left: x,\n    top: y,\n    fill: \"transparent\",\n    stroke: color,\n    strokeWidth: 5,\n    width: 1,\n    height: 1\n  });\n  canvas.add(rect);\n  return rect;\n};\n\n// text\nconst addText = (text = \"\") => {\n  var textObj = new fabric.Text(text, {\n    left: 100,\n    top: 200,\n    fill: \"blue\",\n    fontSize: 40\n  });\n  canvas.add(textObj);\n};\n\n// pencil\nconst addPencil = (width, color) => {\n  canvas.freeDrawingBrush = new fabric.PencilBrush(canvas);\n  canvas.freeDrawingBrush.width = width;\n  canvas.freeDrawingBrush.color = color;\n};\n\nclass Toolbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jsonData: \"\",\n      type: \"draw\",\n      penSize: 20,\n      penColor: COLORS.black,\n      zoom: 1,\n      hasSelected: false,\n      history: []\n    };\n    this.drawingShape = null;\n  }\n\n  componentDidUpdate(pp, ps) {\n    // console.log(ps.type, this.state.type)\n    // if(this.state.type !== 'select') {\n    //   canvas.discardActiveObject();\n    // }\n  }\n\n  async componentDidMount() {\n    const { penSize, penColor } = this.state;\n    await this.initCanvas();\n    addPencil(penSize, penColor);\n  }\n\n  setType = type => {\n    canvas.isDrawingMode = type === \"draw\";\n    this.setState({\n      type: type\n    });\n  };\n\n  setData = data => {\n    this.setState(state => {\n      const { history } = state;\n      history.push(data);\n      return {\n        jsonData: data,\n        history: history\n      };\n    });\n  };\n\n  setPenSize = size => {\n    canvas.freeDrawingBrush.width = size;\n    this.setState({\n      penSize: size\n    });\n  };\n\n  initCanvas = async setState => {\n    canvas = new fabric.Canvas(\"can\", {\n      centeredScaling: true, // 中心缩放\n      isDrawingMode: true,\n      hoverCursor: \"pointer\"\n    });\n    window.canvas = canvas;\n    await addBg();\n    // 初始数据\n    this.setData(JSON.stringify(canvas));\n\n    // 选中\n    canvas.on(\"selection:created\", opt => {\n      if (this.drawingShape) {\n        canvas.discardActiveObject();\n        return;\n      }\n      this.setState({ hasSelected: true, type: \"select\" });\n    });\n    // 无选中\n    canvas.on(\"selection:cleared\", opt => {\n      this.setState({ hasSelected: false });\n    });\n    // mouse:down\n    canvas.on(\"mouse:down\", e => {\n      const { type, penColor } = this.state;\n      if (type === \"rect\") {\n        const [x, y] = Object.values(e.pointer).map(\n          val => val / canvas.getZoom()\n        );\n        this.drawingShape = addRect({\n          color: penColor,\n          x: x,\n          y: y\n        });\n      }\n    });\n    canvas.on(\"mouse:move\", e => {\n      const { type } = this.state;\n      if (type === \"rect\" && this.drawingShape) {\n        const left = this.drawingShape.get(\"left\");\n        const top = this.drawingShape.get(\"top\");\n        const width = this.drawingShape.get(\"width\");\n        const height = this.drawingShape.get(\"height\");\n        const [x, y] = Object.values(e.pointer).map(\n          val => val / canvas.getZoom()\n        );\n        this.drawingShape.set({\n          width: x - left > 0 ? x - left : width + left - x,\n          height: y - top > 0 ? y - top : height + top - y,\n          left: x - left > 0 ? left : x,\n          top: y - top > 0 ? top : y\n        });\n        canvas.requestRenderAll();\n      }\n    });\n\n    canvas.on(\"mouse:up\", e => {\n      const { type } = this.state;\n      // 更新数据\n      this.setData(JSON.stringify(canvas));\n      if (type === \"rect\" && this.drawingShape) {\n        canvas.setActiveObject(this.drawingShape);\n        canvas.discardActiveObject();\n        // bugfix rect select error\n        canvas.setZoom(canvas.getZoom());\n        this.drawingShape = null;\n      }\n    });\n  };\n\n  getActiveClass(type) {\n    return type === \"draw\" ? \"activeType\" : \"\";\n  }\n\n  handlers = {\n    deleteNode() {\n      const activeObjects = canvas.getActiveObjects();\n      activeObjects.forEach(obj => canvas.remove(obj));\n      canvas.discardActiveObject();\n      canvas.renderAll();\n    },\n    moveUp: event => console.log(\"Move up hotkey called!\"),\n    D() {\n      this.setType(\"draw\");\n      canvas.discardActiveObject();\n      canvas.renderAll();\n    },\n    V() {\n      this.setType(\"select\");\n    },\n    Add() {\n      canvas.setZoom(Math.min(MAX_ZOOM, canvas.getZoom() + 1));\n    },\n    Subtract() {\n      canvas.setZoom(Math.max(1, canvas.getZoom() - 1));\n    }\n  };\n\n  render() {\n    const {\n      jsonData,\n      type,\n      penSize,\n      penColor,\n      hasSelected,\n      history\n    } = this.state;\n    return (\n      <GlobalHotKeys handlers={this.handlers} keyMap={keyMap}>\n        <div className=\"toolbox\">\n          <section>\n            <h3>工具栏</h3>\n            <button\n              onClick={() => this.setType(\"rect\")}\n              className={type === \"rect\" ? \"activeType\" : \"\"}\n            >\n              矩形\n            </button>\n            <button\n              onClick={() => this.setType(\"draw\")}\n              className={type === \"draw\" ? \"activeType\" : \"\"}\n            >\n              画笔\n            </button>\n            <button\n              onClick={() => this.setType(\"select\")}\n              className={type === \"select\" ? \"activeType\" : \"\"}\n            >\n              选择\n            </button>\n            <button disabled={!hasSelected} onClick={this.deleteNodes}>\n              删除\n            </button>\n            <button\n              onClick={() => {\n                canvas.getObjects().forEach(obj => canvas.remove(obj));\n              }}\n            >\n              清空\n            </button>\n            <button\n              disabled={history.length < 2}\n              onClick={() => {\n                if (history.length > 1) {\n                  history.pop();\n                  const cur = history[history.length - 1];\n                  this.setState({ jsonData: cur, history: history });\n                  // 这个效果不好，loadbg要好久\n                  canvas.loadFromJSON(cur);\n                }\n              }}\n            >\n              撤销\n            </button>\n            {type === \"draw\" && (\n              <div className=\"subbox\">\n                <label>\n                  <h4> 大小：{penSize}</h4>\n                  <input\n                    type=\"range\"\n                    min=\"1\"\n                    max=\"100\"\n                    value={penSize}\n                    onChange={e => {\n                      this.setPenSize(parseInt(e.target.value, 10));\n                    }}\n                  />\n                </label>\n              </div>\n            )}\n          </section>\n          <h3> 颜色：</h3>\n          <p>\n            {Object.keys(COLORS).map(clr => (\n              <span\n                className={`corlorRadio ${penColor === clr ? \"active\" : \"\"}`}\n                style={{ background: clr }}\n                key={clr}\n                onClick={() => {\n                  canvas.freeDrawingBrush.color = clr;\n                  this.setState({\n                    penColor: clr\n                  });\n                }}\n              />\n            ))}\n          </p>\n          <h3>\n            JSON data：{\" \"}\n          </h3>\n          <a\n              href={URL.createObjectURL(new Blob([jsonData]))}\n              download=\"fabric.json\"\n            >\n              保存JSON\n            </a>\n          <div className=\"data\">{jsonData}</div>\n        </div>\n      </GlobalHotKeys>\n    );\n  }\n}\n\nexport default Toolbox;\n","import React from \"react\";\nimport Toolbox from \"./Toolbox\";\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Toolbox />\n      <canvas width=\"900\" height=\"1200\" id=\"can\" />\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}